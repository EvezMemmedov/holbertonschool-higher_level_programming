matrix_divided = __import__('2-matrix_divided').matrix_divided

# Basic test
matrix = [[1, 2, 3], [4, 5, 6]]
matrix_divided(matrix, 3)
# Expected: [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Original matrix should not be modified
matrix
# Expected: [[1, 2, 3], [4, 5, 6]]

# Division with float
matrix_divided([[1, 2], [3, 4]], 2.0)
# Expected: [[0.5, 1.0], [1.5, 2.0]]

# Division with negative number
matrix_divided([[1, 2], [3, 4]], -2)
# Expected: [[-0.5, -1.0], [-1.5, -2.0]]

# Non-list matrix
try:
    matrix_divided("not a matrix", 2)
except TypeError as e:
    print(e)
# Expected: matrix must be a matrix (list of lists) of integers/floats

# Invalid element type
try:
    matrix_divided([[1, 2], [3, "4"]], 2)
except TypeError as e:
    print(e)
# Expected: matrix must be a matrix (list of lists) of integers/floats

# Unequal row sizes
try:
    matrix_divided([[1, 2], [3, 4, 5]], 2)
except TypeError as e:
    print(e)
# Expected: Each row of the matrix must have the same size

# div not a number
try:
    matrix_divided([[1, 2], [3, 4]], "2")
except TypeError as e:
    print(e)
# Expected: div must be a number

# div is zero
try:
    matrix_divided([[1, 2], [3, 4]], 0)
except ZeroDivisionError as e:
    print(e)
# Expected: division by zero
